/*
 * This file is generated by jOOQ.
 */
package schemas.tables.records;


import java.time.LocalDate;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;

import schemas.tables.EmployessWorked;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class EmployessWorkedRecord extends UpdatableRecordImpl<EmployessWorkedRecord> implements Record4<Integer, Integer, Integer, LocalDate> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.employess_worked.id</code>.
     */
    public EmployessWorkedRecord setId(Integer value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>public.employess_worked.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>public.employess_worked.employee_id</code>.
     */
    public EmployessWorkedRecord setEmployeeId(Integer value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>public.employess_worked.employee_id</code>.
     */
    public Integer getEmployeeId() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>public.employess_worked.worked_hours</code>.
     */
    public EmployessWorkedRecord setWorkedHours(Integer value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>public.employess_worked.worked_hours</code>.
     */
    public Integer getWorkedHours() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>public.employess_worked.worked_date</code>.
     */
    public EmployessWorkedRecord setWorkedDate(LocalDate value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>public.employess_worked.worked_date</code>.
     */
    public LocalDate getWorkedDate() {
        return (LocalDate) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row4<Integer, Integer, Integer, LocalDate> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    @Override
    public Row4<Integer, Integer, Integer, LocalDate> valuesRow() {
        return (Row4) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return EmployessWorked.EMPLOYESS_WORKED.ID;
    }

    @Override
    public Field<Integer> field2() {
        return EmployessWorked.EMPLOYESS_WORKED.EMPLOYEE_ID;
    }

    @Override
    public Field<Integer> field3() {
        return EmployessWorked.EMPLOYESS_WORKED.WORKED_HOURS;
    }

    @Override
    public Field<LocalDate> field4() {
        return EmployessWorked.EMPLOYESS_WORKED.WORKED_DATE;
    }

    @Override
    public Integer component1() {
        return getId();
    }

    @Override
    public Integer component2() {
        return getEmployeeId();
    }

    @Override
    public Integer component3() {
        return getWorkedHours();
    }

    @Override
    public LocalDate component4() {
        return getWorkedDate();
    }

    @Override
    public Integer value1() {
        return getId();
    }

    @Override
    public Integer value2() {
        return getEmployeeId();
    }

    @Override
    public Integer value3() {
        return getWorkedHours();
    }

    @Override
    public LocalDate value4() {
        return getWorkedDate();
    }

    @Override
    public EmployessWorkedRecord value1(Integer value) {
        setId(value);
        return this;
    }

    @Override
    public EmployessWorkedRecord value2(Integer value) {
        setEmployeeId(value);
        return this;
    }

    @Override
    public EmployessWorkedRecord value3(Integer value) {
        setWorkedHours(value);
        return this;
    }

    @Override
    public EmployessWorkedRecord value4(LocalDate value) {
        setWorkedDate(value);
        return this;
    }

    @Override
    public EmployessWorkedRecord values(Integer value1, Integer value2, Integer value3, LocalDate value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached EmployessWorkedRecord
     */
    public EmployessWorkedRecord() {
        super(EmployessWorked.EMPLOYESS_WORKED);
    }

    /**
     * Create a detached, initialised EmployessWorkedRecord
     */
    public EmployessWorkedRecord(Integer id, Integer employeeId, Integer workedHours, LocalDate workedDate) {
        super(EmployessWorked.EMPLOYESS_WORKED);

        setId(id);
        setEmployeeId(employeeId);
        setWorkedHours(workedHours);
        setWorkedDate(workedDate);
    }

    /**
     * Create a detached, initialised EmployessWorkedRecord
     */
    public EmployessWorkedRecord(schemas.tables.pojos.EmployessWorked value) {
        super(EmployessWorked.EMPLOYESS_WORKED);

        if (value != null) {
            setId(value.getId());
            setEmployeeId(value.getEmployeeId());
            setWorkedHours(value.getWorkedHours());
            setWorkedDate(value.getWorkedDate());
        }
    }
}
